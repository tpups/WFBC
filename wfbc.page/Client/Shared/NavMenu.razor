@inject AppState AppState
@inject NavigationManager Navigation

<ul>
    @{
        switch (NavMenuSection)
        {
            case "rulebook":
                <li class="nav-menu-item right-column-item"><NavLink @onclick="CloseOnMobile" href="/rulebook/2024">2024 Rulebook</NavLink></li>
                <li class="nav-menu-item right-column-item"><NavLink @onclick="CloseOnMobile" href="/rulebook/2023">2023 Rulebook</NavLink></li>
                <li class="nav-menu-item right-column-item"><NavLink @onclick="CloseOnMobile" href="/rulebook/2022">2022 Rulebook</NavLink></li>
                <li class="nav-menu-item right-column-item"><NavLink @onclick="CloseOnMobile" href="/rulebook/2021">2021 Rulebook</NavLink></li>
                <li class="nav-menu-item right-column-item"><NavLink @onclick="CloseOnMobile" href="/rulebook/2020">2020 Rulebook</NavLink></li>
                <li class="nav-menu-item right-column-item"><NavLink @onclick="CloseOnMobile" href="/rulebook/2016">2016 Rulebook</NavLink></li>
                break;
            case "results":
                for (int year = 2024; year >= 2011; year--)
                {
                    string yearString = year.ToString();
                    <li class="nav-menu-item right-column-item"><NavLink @onclick="CloseOnMobile" href=@("/results/" + yearString)>@yearString Results</NavLink></li>
                }
                break;
            case "home":
                break;
        }
    }
</ul>

@code {
    [CascadingParameter(Name = "nav-menu-section")]
    protected string? NavMenuSection { get; set; }

    private void CloseOnMobile()
    {
        if (AppState.IsXSmall)
        {
            AppState.SetDrawerClosed(false, true);
        }
    }
}